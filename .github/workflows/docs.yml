
name: Generate Coverage and Documentation

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  PYTHON_VERSION: "3.12"

jobs:

  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Cache apt packages
      uses: actions/cache@v4
      with:
        path: /var/cache/apt/archives
        key: ${{ runner.os }}-apt-gfortran-graphviz-gcc
        restore-keys: |
          ${{ runner.os }}-apt-

    - name: Install system dependencies
      run: |
        sudo apt update
        sudo apt install -y gfortran gcc graphviz

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Cache Python packages
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ env.PYTHON_VERSION }}-docs-${{ hashFiles('pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ env.PYTHON_VERSION }}-docs-
          ${{ runner.os }}-pip-${{ env.PYTHON_VERSION }}-
          ${{ runner.os }}-pip-

    - name: Install python packages
      run: |
        pip install hatch FORD sphinx

    - name: Run coverage
      run: |
        make cov

    - name: Move coverage reports to documentation
      run: |
        mkdir -p ./docs/static/coverage
        if [ -d "_coverage/" ]; then
          cp -r _coverage/ ./docs/static/coverage/
        fi
        if [ -d "_coverage_python/" ]; then
          cp -r _coverage_python/ ./docs/static/coverage/
        fi

    - name: Generate documentation
      run: |
        ls -lR docs
        make doc

    - name: Setup Pages
      uses: actions/configure-pages@v5

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './docs/_build'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
